{
  "source": {
    "hash": "0x0cf156c90d20dfa3fd63299c90b6415508a76c2ab7946d2ec4ab033e3bb6b216",
    "language": "ink! 4.2.0",
    "compiler": "rustc 1.69.0-nightly",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "2.1.0",
      "rust_toolchain": "nightly-x86_64-unknown-linux-gnu",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "marketplace",
    "version": "0.4.0",
    "authors": [
      "Stake Technologies <devops@stake.co.jp>"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "market_fee_recipient",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 8
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 0
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 5
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 16
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 27
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 6
      },
      "maxEventTopics": 4,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 7
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "contract",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "id",
            "type": {
              "displayName": [
                "Id"
              ],
              "type": 15
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "price",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 23
            }
          }
        ],
        "docs": [
          "Event emitted when token is listed or unlisted"
        ],
        "label": "TokenListed"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "contract",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "id",
            "type": {
              "displayName": [
                "Id"
              ],
              "type": 15
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "price",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 5
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "from",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "to",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Event emitted when a token is bought"
        ],
        "label": "TokenBought"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "contract",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Event emitted when a NFT contract is registered to the marketplace."
        ],
        "label": "CollectionRegistered"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 9
    },
    "messages": [
      {
        "args": [
          {
            "label": "code_hash",
            "type": {
              "displayName": [],
              "type": 1
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "set_code",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x694fb50f"
      },
      {
        "args": [
          {
            "label": "contract_address",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "BuyInput1"
              ],
              "type": 0
            }
          },
          {
            "label": "token_id",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "BuyInput2"
              ],
              "type": 15
            }
          }
        ],
        "default": false,
        "docs": [
          " Buys NFT item from the marketplace."
        ],
        "label": "MarketplaceSale::buy",
        "mutates": true,
        "payable": true,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xdbdb7c1d"
      },
      {
        "args": [
          {
            "label": "contract_type",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "SetNftContractHashInput1"
              ],
              "type": 18
            }
          },
          {
            "label": "contract_hash",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "SetNftContractHashInput2"
              ],
              "type": 6
            }
          }
        ],
        "default": false,
        "docs": [
          " Sets a hash of a Shiden34 contract to be instantiated by factory call."
        ],
        "label": "MarketplaceSale::set_nft_contract_hash",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xe4d9f02e"
      },
      {
        "args": [
          {
            "label": "fee",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "SetMarketplaceFeeInput1"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Sets the marketplace fee."
        ],
        "label": "MarketplaceSale::set_marketplace_fee",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x56e9ac75"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets max fee that can be applied to an item price."
        ],
        "label": "MarketplaceSale::get_max_fee",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0x65f6e5cb"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets the marketplace fee recipient."
        ],
        "label": "MarketplaceSale::get_fee_recipient",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 20
        },
        "selector": "0xa8f2f9a7"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets the marketplace fee."
        ],
        "label": "MarketplaceSale::get_marketplace_fee",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0xd670d2c9"
      },
      {
        "args": [
          {
            "label": "contract_type",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "NftContractHashInput1"
              ],
              "type": 18
            }
          }
        ],
        "default": false,
        "docs": [
          " Gets a NFT contract hash."
        ],
        "label": "MarketplaceSale::nft_contract_hash",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 21
        },
        "selector": "0x2a0d765f"
      },
      {
        "args": [
          {
            "label": "contract_address",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "GetPriceInput1"
              ],
              "type": 0
            }
          },
          {
            "label": "token_id",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "GetPriceInput2"
              ],
              "type": 15
            }
          }
        ],
        "default": false,
        "docs": [
          " Checks if NFT token is listed on the marketplace and returns token price."
        ],
        "label": "MarketplaceSale::get_price",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 22
        },
        "selector": "0x7508d5eb"
      },
      {
        "args": [
          {
            "label": "fee_recipient",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "SetFeeRecipientInput1"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Sets the marketplace fee recipient."
        ],
        "label": "MarketplaceSale::set_fee_recipient",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x1d09a9b4"
      },
      {
        "args": [
          {
            "label": "contract_address",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "RegisterInput1"
              ],
              "type": 0
            }
          },
          {
            "label": "royalty_receiver",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "RegisterInput2"
              ],
              "type": 0
            }
          },
          {
            "label": "royalty",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "RegisterInput3"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Registers NFT collection to the marketplace."
        ],
        "label": "MarketplaceSale::register",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x8b3b40f3"
      },
      {
        "args": [
          {
            "label": "contract_address",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "GetRegisteredCollectionInput1"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Gets registered collection."
        ],
        "label": "MarketplaceSale::get_registered_collection",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 24
        },
        "selector": "0x300696d9"
      },
      {
        "args": [
          {
            "label": "contract_address",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "ListInput1"
              ],
              "type": 0
            }
          },
          {
            "label": "token_id",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "ListInput2"
              ],
              "type": 15
            }
          },
          {
            "label": "price",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "ListInput3"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " Creates a NFT item sale on the marketplace."
        ],
        "label": "MarketplaceSale::list",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x9aea6f9e"
      },
      {
        "args": [
          {
            "label": "contract_address",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "UnlistInput1"
              ],
              "type": 0
            }
          },
          {
            "label": "token_id",
            "type": {
              "displayName": [
                "marketplacesale_external",
                "UnlistInput2"
              ],
              "type": 15
            }
          }
        ],
        "default": false,
        "docs": [
          " Removes a NFT from the marketplace sale."
        ],
        "label": "MarketplaceSale::unlist",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x0e02ef2c"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 0
                        }
                      },
                      "name": "owner"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 3
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "_reserved"
                    }
                  ],
                  "name": "Data"
                }
              },
              "name": "ownable"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 2
                        }
                      },
                      "name": "status"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 3
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "_reserved"
                    }
                  ],
                  "name": "Data"
                }
              },
              "name": "guard"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x138142a5",
                                      "ty": 0
                                    }
                                  },
                                  "name": "royalty_receiver"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x138142a5",
                                      "ty": 4
                                    }
                                  },
                                  "name": "royalty"
                                }
                              ],
                              "name": "RegisteredCollection"
                            }
                          },
                          "root_key": "0x138142a5"
                        }
                      },
                      "name": "registered_collections"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x5dfac64b",
                                      "ty": 0
                                    }
                                  },
                                  "name": "owner"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x5dfac64b",
                                      "ty": 5
                                    }
                                  },
                                  "name": "price"
                                }
                              ],
                              "name": "Item"
                            }
                          },
                          "root_key": "0x5dfac64b"
                        }
                      },
                      "name": "items"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 4
                        }
                      },
                      "name": "fee"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 4
                        }
                      },
                      "name": "max_fee"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 0
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "market_fee_recipient"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0xfd6e62b8",
                              "ty": 6
                            }
                          },
                          "root_key": "0xfd6e62b8"
                        }
                      },
                      "name": "nft_contract_hash"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 7
                        }
                      },
                      "name": "nonce"
                    }
                  ],
                  "name": "Data"
                }
              },
              "name": "marketplace"
            }
          ],
          "name": "MarketplaceContract"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 2
          }
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "primitive": "u16"
        }
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 3
          },
          {
            "name": "E",
            "type": 9
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 11
          },
          {
            "name": "E",
            "type": 9
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 12
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 3
          },
          {
            "name": "E",
            "type": 12
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 13,
                    "typeName": "OwnableError"
                  }
                ],
                "index": 0,
                "name": "OwnableError"
              },
              {
                "fields": [
                  {
                    "type": 14,
                    "typeName": "ReentrancyGuardError"
                  }
                ],
                "index": 1,
                "name": "ReentrancyError"
              },
              {
                "index": 2,
                "name": "NotOwner"
              },
              {
                "index": 3,
                "name": "ItemNotFound"
              },
              {
                "index": 4,
                "name": "ItemNotListedForSale"
              },
              {
                "index": 5,
                "name": "NotRegisteredContract"
              },
              {
                "index": 6,
                "name": "BadBuyValue"
              },
              {
                "index": 7,
                "name": "TransferToMarketplaceFailed"
              },
              {
                "index": 8,
                "name": "TransferToOwnerFailed"
              },
              {
                "index": 9,
                "name": "TransferToAuthorFailed"
              },
              {
                "index": 10,
                "name": "ContractAlreadyRegistered"
              },
              {
                "index": 11,
                "name": "FeeTooHigh"
              },
              {
                "index": 12,
                "name": "UnableToTransferToken"
              },
              {
                "index": 13,
                "name": "NftContractHashNotSet"
              },
              {
                "index": 14,
                "name": "ContractInstantiationFailed"
              },
              {
                "index": 15,
                "name": "AlreadyOwner"
              },
              {
                "index": 16,
                "name": "TokenDoesNotExist"
              },
              {
                "index": 17,
                "name": "ItemAlreadyListedForSale"
              },
              {
                "index": 18,
                "name": "TokenNotApproved"
              }
            ]
          }
        },
        "path": [
          "pallet_marketplace",
          "impls",
          "marketplace",
          "types",
          "MarketplaceError"
        ]
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "CallerIsNotOwner"
              },
              {
                "index": 1,
                "name": "NewOwnerIsZero"
              }
            ]
          }
        },
        "path": [
          "openbrush_contracts",
          "traits",
          "errors",
          "ownable",
          "OwnableError"
        ]
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "ReentrantCall"
              }
            ]
          }
        },
        "path": [
          "openbrush_contracts",
          "traits",
          "errors",
          "reentrancy_guard",
          "ReentrancyGuardError"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 2,
                    "typeName": "u8"
                  }
                ],
                "index": 0,
                "name": "U8"
              },
              {
                "fields": [
                  {
                    "type": 4,
                    "typeName": "u16"
                  }
                ],
                "index": 1,
                "name": "U16"
              },
              {
                "fields": [
                  {
                    "type": 16,
                    "typeName": "u32"
                  }
                ],
                "index": 2,
                "name": "U32"
              },
              {
                "fields": [
                  {
                    "type": 7,
                    "typeName": "u64"
                  }
                ],
                "index": 3,
                "name": "U64"
              },
              {
                "fields": [
                  {
                    "type": 5,
                    "typeName": "u128"
                  }
                ],
                "index": 4,
                "name": "U128"
              },
              {
                "fields": [
                  {
                    "type": 17,
                    "typeName": "Vec<u8>"
                  }
                ],
                "index": 5,
                "name": "Bytes"
              }
            ]
          }
        },
        "path": [
          "openbrush_contracts",
          "traits",
          "types",
          "Id"
        ]
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "sequence": {
            "type": 2
          }
        }
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Psp34"
              },
              {
                "index": 1,
                "name": "Rmrk"
              }
            ]
          }
        },
        "path": [
          "pallet_marketplace",
          "impls",
          "marketplace",
          "types",
          "NftContractType"
        ]
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 4
          },
          {
            "name": "E",
            "type": 9
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 9
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 6
          },
          {
            "name": "E",
            "type": 9
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 23
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 23
          },
          {
            "name": "E",
            "type": 9
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 25
          },
          {
            "name": "E",
            "type": 9
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 26
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 26
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "royalty_receiver",
                "type": 0,
                "typeName": "AccountId"
              },
              {
                "name": "royalty",
                "type": 4,
                "typeName": "u16"
              }
            ]
          }
        },
        "path": [
          "pallet_marketplace",
          "impls",
          "marketplace",
          "types",
          "RegisteredCollection"
        ]
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": "4"
}